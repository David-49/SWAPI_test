openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Vehicle API"
paths:
  /vehicles:
    get:
      summary: "Get all vehicles"
      responses:
        200:
          description: "A list of vehicles"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Vehicle"
    post:
      summary: "Create a new vehicle"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
      responses:
        201:
          description: "The vehicle was successfully created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        500:
          description: "Some server error"
  /vehicles/{id}:
    get:
      summary: "Get a vehicle by ID"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the vehicle"
          schema:
            type: string
      responses:
        200:
          description: "The vehicle data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        404:
          description: "Vehicle not found"
    patch:
      summary: "Update a vehicle by ID"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the vehicle"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Vehicle"
      responses:
        200:
          description: "The vehicle was successfully updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Vehicle"
        500:
          description: "Some server error"
    delete:
      summary: "Delete a vehicle by ID"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the vehicle"
          schema:
            type: string
      responses:
        200:
          description: "The vehicle was successfully deleted"
        500:
          description: "Some server error"
components:
  schemas:
    Vehicle:
      type: object
      required:
        - fields
        - model
      properties:
        fields:
          type: object
          properties:
            vehicle_class:
              type: string
              description: "The class of the vehicle"
            pilots:
              type: array
              items:
                type: string
              description: "The pilots of the vehicle"
        model:
          type: string
          description: "The model of the vehicle"
      example:
        fields:
          vehicle_class: "wheeled"
          pilots: ["Luke Skywalker", "Han Solo"]
        model: "Vehicle"
