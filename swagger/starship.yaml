openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Starship API"
paths:
  /starships:
    get:
      summary: "Get all starships"
      responses:
        200:
          description: "A list of starships"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Starship"
    post:
      summary: "Create a new starship"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Starship"
      responses:
        201:
          description: "The starship was successfully created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Starship"
        500:
          description: "Some server error"
  /starships/{id}:
    get:
      summary: "Get a starship by ID"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the starship"
          schema:
            type: string
      responses:
        200:
          description: "The starship data"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Starship"
        404:
          description: "Starship not found"
    patch:
      summary: "Update a starship by ID"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the starship"
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Starship"
      responses:
        200:
          description: "The starship was successfully updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Starship"
        500:
          description: "Some server error"
    delete:
      summary: "Delete a starship by ID"
      parameters:
        - in: path
          name: id
          required: true
          description: "ID of the starship"
          schema:
            type: string
      responses:
        200:
          description: "The starship was successfully deleted"
        500:
          description: "Some server error"
components:
  schemas:
    Starship:
      type: object
      required:
        - fields
        - model
      properties:
        fields:
          type: object
          properties:
            MGLT:
              type: string
              description: "The Maximum number of Megalights the starship can travel."
            starship_class:
              type: string
              description: "The class of the starship."
            hyperdrive_rating:
              type: string
              description: "The rating of the starship's hyperdrive."
            pilots:
              type: array
              items:
                type: string
              description: "The pilots of the starship."
        model:
          type: string
          description: "The model of the starship."
      example:
        fields:
          MGLT: "75"
          starship_class: "Star Destroyer"
          hyperdrive_rating: "2.0"
          pilots: ["Luke Skywalker", "Han Solo"]
        model: "Starship"
